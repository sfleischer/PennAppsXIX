
<!DOCTYPE html>
<html>
<head>
  <title>Engagement+</title>
  <base href="/">
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <script src="https://code.jquery.com/jquery.min.js"></script>
  <link rel="stylesheet" href="https://unpkg.com/tachyons@4.9.1/css/tachyons.min.css"/>
  <script src="https://unpkg.com/feather-icons/dist/feather.min.js"></script>
  <script src="/javascript/speech_to_text.js"></script>
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

  <script type="text/javascript">
      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);
      function drawChart() {
        var data = "<%= graph %>";
        var a = data.replace(/&#34;/g, "\"");
        var parsed = JSON.parse(a);
        console.log(parsed);
        var data = google.visualization.arrayToDataTable(parsed);
        var options = {
          title: 'Account Balance',
          legend: { position: 'bottom' }
        };
        var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));
        chart.draw(data, options);
      }
    </script>

</head>

<header class="cf ph3">
  <h1 class="fl-ns mb0 mt3 pt1"><a href="" class="link green hover-dark-green">Engagement<span class="dib-l dib-m dn"></span>+ Dashboard</a></h1>
  <nav class="fr-ns">
    <a href="/about" class="b link dark-gray hover-green ml3 mr4"><i data-feather="help-circle"></i></a>
    <div class="dib">
      <img src="https://www.famousbirthdays.com/faces/pederson-doug-image.jpg" class="br-100 h2 w2 ba dib" alt="avatar">
      <ul class="dib list pl0">
        <li class="link b f7"><%= name %></li>
        <li class="link"><i>Associate</i></li>
      </ul>
    </div>
  </nav>
</header>

<div class="center pv3 ph3-l ph2 flex items-center bb bt b--black-10">
  <div class="flex justify-between flex-grow-1 justify-around items-center">
    <div class="flex-end">
    <label for="inputName" class="f7 b ttu gray db mb2 mt1">Customer Account Number</label>

    <form id="searchform" method="get" accept-charset="utf-8">
        <div class="input-group input-group-lg">
            <input type="number" class="input-reset ba b--black-20 pa3 " id="searchbox" name="account" placeholder="Account ID" aria-describedby="inputName-desc">
          
          <button class="tc b mh3 ph4 pv3 input-reset ba pa4 b--black bg-transparent grow pointer f6 bg-animate hover-bg-black hover-white">
            <span class="pr1">Search</span>
            <i data-feather="search" width="12" height="12" class="w6 v-mid"></i>
          </button>
        </div>
    </form>
  </div>

  <div>
    <label for="inputName" class="mick microphone f7 b ttu gray db mb2 mt1">Recording <i data-feather="mic" width="16" class="mick w1 v-mid red" id="microphone"></i></label>

    <button id="start" class="start tc b ph4 pv3 input-reset ba pa4 bg-green b--green grow pointer f6 bg-animate hover-bg-dark-green white hover-white">Start</button>
      <button id="stop" class="stop tc b ph4 pv3 input-reset ba pa4 bg-red b--red grow pointer f6 bg-animate hover-bg-dark-red white hover-white">Stop</button>
  </div>


  </div>
</div>


<div style=" width:100%; height: 550px">
<article class="mw6 tc bg-white br3 pa3 pa4-ns mb3 mt6 ba b--black-10" style="float: left; margin-left: 20px; width: 350px; height: auto; margin-top: 20px !important; padding-bottom: 0px">
  <div class="tc">

    <h1 class="f4 mt0">You are currently helping:</h1>

  </div>
  <p class="lh-copy measure f6 black-70 mt3"></p>
    <%if (data && JSON.parse(data).businessUnit && JSON.parse(data).accountType) { %>
    <div class="mb4">
      <label class="f7 b ttc dark-gray db mb2 mt1">Customer Name:</label>
      <td class="pv2 ph3"><%= customer_name %></td>
    </div>
    <div class="mb4">
      <label class="f7 b ttc dark-gray db mb2 mt1">Phone Number:</label>
      <td class="pv2 ph3"><%= phone %></td>
    </div>
    <div class="mb4">
      <label class="f7 b ttc dark-gray db mb2 mt1">Email:</label>
      <td class="pv2 ph3"><%= email %></td>
    </div>
    <div class="mb4">
      <label class="f7 ttc dark-gray db mb2 mt1"><b>Account ID:</b> <%= accountNum %></label>
    </div>
    <div class="mb4">
      <label class="f7 ttc dark-gray db mb2 mt1"><b>Account Type:</b> <%= JSON.parse(data).accountType.accountType %> </label>
    </div>
    <div class="mb4">
      <label class="f7 b ttc dark-gray db mb2 mt1">Local TD Bank Address:</label>
      <td class="pv2 ph3"><%= JSON.parse(data).businessUnit.address %></td>
    </div>
  </form>
  <% } %>
</article>

<article class="mw6 tc bg-white br3 pa3 pa4-ns mb3 mt6 ba b--black-10" style="float: left; margin-left: 10px; width: 350px; height: auto; margin-top: 20px !important">
  <div class="tc">

    <h1 class="f4 mt0">Current Chat Log:</h1>
    <div id="output" style = "width:200">
      <ul class = "list-group" id = "output_text" style = "overflow: auto; width: 100%; height : 362px; list-style: none;">
      </ul>
   </div>

  </div>
</article>


<article class="mw6 tc bg-white br3 pa3 pa4-ns mb3 mt6 ba b--black-10" style="float: left; margin-left: 10px; width: 500px; height: 484px; margin-top: 20px !important">
<div class="pa3 tl" style = "padding: 0px">
  <h2 class="mb0 mt5" style = "margin-top: 0px !important">Try these prompts:</h2>
  <table class="w-1000 collapse ba tl br2 b--black-10 pv2 ph3 mt2 mb5">
      <thead>
        <tr class="stripe-dark">
          <th class="fw6 tl pa3 bg-white">Topic</th>
          <th class="fw6 tl pa3 bg-white">Suggestion</th>
        </tr>
      </thead>
    <tbody>
      <% if (accountNum % 6 == 0) { %>
      <tr class="striped--near-white">
        <td class="pv2 ph3">Football</td>
        <td class="pv2 ph3">Are you excited for the football game?</td>
      </tr>
      <tr class="striped--near-white">
        <td class="pv2 ph3">Classes</td>
        <td class="pv2 ph3">How are classes?</td>
      </tr>
      <tr class="striped--near-white">
        <td class="pv2 ph3">Busy</td>
        <td class="pv2 ph3">Have you been busy lately?</td>
      </tr>
      <tr class="striped--near-white">
        <td class="pv2 ph3">Friday</td>
        <td class="pv2 ph3">Are you excited for Friday?</td>
      </tr>
      <tr class="striped--near-white">
        <td class="pv2 ph3">Burgers</td>
        <td class="pv2 ph3">Do you recommend burgers?</td>
      </tr>
      <% } else if (accountNum % 6 == 1) {%>
          <tr class="striped--near-white">
            <td class="pv2 ph3">Will Smith</td>
            <td class="pv2 ph3">What do you think of Will Smith?</td>
          </tr>
          <tr class="striped--near-white">
            <td class="pv2 ph3">Lakers</td>
            <td class="pv2 ph3">How are the Lakers?</td>
          </tr>
          <tr class="striped--near-white">
            <td class="pv2 ph3">Stroller</td>
            <td class="pv2 ph3">What do you think of stroller?</td>
          </tr>
          <tr class="striped--near-white">
            <td class="pv2 ph3">Rap</td>
            <td class="pv2 ph3">What is your favorite rap music?</td>
          </tr>
          <tr class="striped--near-white">
            <td class="pv2 ph3">Hamburgers</td>
            <td class="pv2 ph3">Do you recommend hamburgers?</td>
          </tr>
      <% } else if (accountNum % 6 == 2) {%>
            <tr class="striped--near-white">
              <td class="pv2 ph3">Star Wars</td>
              <td class="pv2 ph3">What do you think of Star Wars?</td>
            </tr>
            <tr class="striped--near-white">
              <td class="pv2 ph3">Comic-con</td>
              <td class="pv2 ph3">How is comic-con?</td>
            </tr>
            <tr class="striped--near-white">
              <td class="pv2 ph3">Reddit</td>
              <td class="pv2 ph3">What do you think of reddit?</td>
            </tr>
            <tr class="striped--near-white">
              <td class="pv2 ph3">Philadelphia</td>
              <td class="pv2 ph3">What is your favorite thing to do in Philadelphia?</td>
            </tr>
            <tr class="striped--near-white">
              <td class="pv2 ph3">University</td>
              <td class="pv2 ph3">Do you like your university?</td>
            </tr>
      <% } else if (accountNum % 6 == 3) {%>
            <tr class="striped--near-white">
                <td class="pv2 ph3">Pistons</td>
                <td class="pv2 ph3">What do you think of the Pistons?</td>
              </tr>
              <tr class="striped--near-white">
                <td class="pv2 ph3">San Francisco</td>
                <td class="pv2 ph3">What is your favorite thing to do in San Francisco?</td>
              </tr>
              <tr class="striped--near-white">
                <td class="pv2 ph3">Ford</td>
                <td class="pv2 ph3">What do you think of Ford?</td>
              </tr>
              <tr class="striped--near-white">
                <td class="pv2 ph3">Hip Hop</td>
                <td class="pv2 ph3">What is your favorite hip hop music?</td>
              </tr>
              <tr class="striped--near-white">
                <td class="pv2 ph3">Drake</td>
                <td class="pv2 ph3">Do you recommend Drake?</td>
              </tr>
      <% } else if (accountNum % 6 == 4) {%>
            <tr class="striped--near-white">
                <td class="pv2 ph3">Eagles</td>
                <td class="pv2 ph3">What do you think of eagles?</td>
              </tr>
              <tr class="striped--near-white">
                <td class="pv2 ph3">Philadelphia</td>
                <td class="pv2 ph3">What is your favorite thing to do in Philadelphia?</td>
              </tr>
              <tr class="striped--near-white">
                <td class="pv2 ph3">Love</td>
                <td class="pv2 ph3">What do you love?</td>
              </tr>
              <tr class="striped--near-white">
                <td class="pv2 ph3">Fly</td>
                <td class="pv2 ph3">Do you enjoy flying?</td>
              </tr>
              <tr class="striped--near-white">
                <td class="pv2 ph3">Birds</td>
                <td class="pv2 ph3">Do you like birds?</td>
              </tr>
      <% } else {%>
              <tr class="striped--near-white">
                <td class="pv2 ph3">Hockey</td>
                <td class="pv2 ph3">What do you think of hockey?</td>
              </tr>
              <tr class="striped--near-white">
                <td class="pv2 ph3">Swim</td>
                <td class="pv2 ph3">What do you like about swimming?</td>
              </tr>
              <tr class="striped--near-white">
                <td class="pv2 ph3">Best</td>
                <td class="pv2 ph3">What is best?</td>
              </tr>
              <tr class="striped--near-white">
                <td class="pv2 ph3">The Office</td>
                <td class="pv2 ph3">Do you enjoy the office?</td>
              </tr>
              <tr class="striped--near-white">
                <td class="pv2 ph3">Computers</td>
                <td class="pv2 ph3">Do you enjoy computers?</td>
              </tr>
      <% }  %>
    </tbody>
  </table>
</div>
</article>
</div>
<br>
<div style="text-align: center; margin-top: -100px !important; margin-bottom: 20px">
<h2 class="mb0 mt5" style = "padding-left : 20px; text-align: center; width : 1200px;">Spending History:</h2>
<div id="map" style="width: 550px; height: 350px; margin-left: 40px; margin-right: 40px; margin-top: 20px !important; display: inline-block;"></div>
<div id="curve_chart" style="width: 550px; height: 350px; display: inline-block;"></div>
</div>
<script>
  feather.replace()
  $('.start').on('click',function(){
    $('.microphone').addClass("Blink");
    $('.mick').addClass("Blink");
    startStream();
  });
  $('.stop').on('click',function(){
    $('.microphone').removeClass("Blink");
    $('.mick').removeClass("Blink");
  });
</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAIL77gjKi97qZ3-aBHd6veacf7fruhPAk&libraries=visualization"></script>
<script>
  (function(a,b,c){if(typeof module!=="undefined"&&module.exports){module.exports=c()}else if(typeof define==="function"&&define.amd){define(c)}else{b[a]=c()}})("h337",this,function(){var a={defaultRadius:40,defaultRenderer:"canvas2d",defaultGradient:{.25:"rgb(0,0,255)",.55:"rgb(0,255,0)",.85:"yellow",1:"rgb(255,0,0)"},defaultMaxOpacity:1,defaultMinOpacity:0,defaultBlur:.85,defaultXField:"x",defaultYField:"y",defaultValueField:"value",plugins:{}};var b=function h(){var b=function d(a){this._coordinator={};this._data=[];this._radi=[];this._min=10;this._max=1;this._xField=a["xField"]||a.defaultXField;this._yField=a["yField"]||a.defaultYField;this._valueField=a["valueField"]||a.defaultValueField;if(a["radius"]){this._cfgRadius=a["radius"]}};var c=a.defaultRadius;b.prototype={_organiseData:function(a,b){var d=a[this._xField];var e=a[this._yField];var f=this._radi;var g=this._data;var h=this._max;var i=this._min;var j=a[this._valueField]||1;var k=a.radius||this._cfgRadius||c;if(!g[d]){g[d]=[];f[d]=[]}if(!g[d][e]){g[d][e]=j;f[d][e]=k}else{g[d][e]+=j}var l=g[d][e];if(l>h){if(!b){this._max=l}else{this.setDataMax(l)}return false}else if(l<i){if(!b){this._min=l}else{this.setDataMin(l)}return false}else{return{x:d,y:e,value:j,radius:k,min:i,max:h}}},_unOrganizeData:function(){var a=[];var b=this._data;var c=this._radi;for(var d in b){for(var e in b[d]){a.push({x:d,y:e,radius:c[d][e],value:b[d][e]})}}return{min:this._min,max:this._max,data:a}},_onExtremaChange:function(){this._coordinator.emit("extremachange",{min:this._min,max:this._max})},addData:function(){if(arguments[0].length>0){var a=arguments[0];var b=a.length;while(b--){this.addData.call(this,a[b])}}else{var c=this._organiseData(arguments[0],true);if(c){if(this._data.length===0){this._min=this._max=c.value}this._coordinator.emit("renderpartial",{min:this._min,max:this._max,data:[c]})}}return this},setData:function(a){var b=a.data;var c=b.length;this._data=[];this._radi=[];for(var d=0;d<c;d++){this._organiseData(b[d],false)}this._max=a.max;this._min=a.min||0;this._onExtremaChange();this._coordinator.emit("renderall",this._getInternalData());return this},removeData:function(){},setDataMax:function(a){this._max=a;this._onExtremaChange();this._coordinator.emit("renderall",this._getInternalData());return this},setDataMin:function(a){this._min=a;this._onExtremaChange();this._coordinator.emit("renderall",this._getInternalData());return this},setCoordinator:function(a){this._coordinator=a},_getInternalData:function(){return{max:this._max,min:this._min,data:this._data,radi:this._radi}},getData:function(){return this._unOrganizeData()}};return b}();var c=function i(){var a=function(a){var b=a.gradient||a.defaultGradient;var c=document.createElement("canvas");var d=c.getContext("2d");c.width=256;c.height=1;var e=d.createLinearGradient(0,0,256,1);for(var f in b){e.addColorStop(f,b[f])}d.fillStyle=e;d.fillRect(0,0,256,1);return d.getImageData(0,0,256,1).data};var b=function(a,b){var c=document.createElement("canvas");var d=c.getContext("2d");var e=a;var f=a;c.width=c.height=a*2;if(b==1){d.beginPath();d.arc(e,f,a,0,2*Math.PI,false);d.fillStyle="rgba(0,0,0,1)";d.fill()}else{var g=d.createRadialGradient(e,f,a*b,e,f,a);g.addColorStop(0,"rgba(0,0,0,1)");g.addColorStop(1,"rgba(0,0,0,0)");d.fillStyle=g;d.fillRect(0,0,2*a,2*a)}return c};var c=function(a){var b=[];var c=a.min;var d=a.max;var e=a.radi;var a=a.data;var f=Object.keys(a);var g=f.length;while(g--){var h=f[g];var i=Object.keys(a[h]);var j=i.length;while(j--){var k=i[j];var l=a[h][k];var m=e[h][k];b.push({x:h,y:k,value:l,radius:m})}}return{min:c,max:d,data:b}};function d(b){var c=b.container;var d=this.shadowCanvas=document.createElement("canvas");var e=this.canvas=b.canvas||document.createElement("canvas");var f=this._renderBoundaries=[1e4,1e4,0,0];var g=getComputedStyle(b.container)||{};e.className="heatmap-canvas";this._width=e.width=d.width=b.width||+g.width.replace(/px/,"");this._height=e.height=d.height=b.height||+g.height.replace(/px/,"");this.shadowCtx=d.getContext("2d");this.ctx=e.getContext("2d");e.style.cssText=d.style.cssText="position:absolute;left:0;top:0;";c.style.position="relative";c.appendChild(e);this._palette=a(b);this._templates={};this._setStyles(b)}d.prototype={renderPartial:function(a){if(a.data.length>0){this._drawAlpha(a);this._colorize()}},renderAll:function(a){this._clear();if(a.data.length>0){this._drawAlpha(c(a));this._colorize()}},_updateGradient:function(b){this._palette=a(b)},updateConfig:function(a){if(a["gradient"]){this._updateGradient(a)}this._setStyles(a)},setDimensions:function(a,b){this._width=a;this._height=b;this.canvas.width=this.shadowCanvas.width=a;this.canvas.height=this.shadowCanvas.height=b},_clear:function(){this.shadowCtx.clearRect(0,0,this._width,this._height);this.ctx.clearRect(0,0,this._width,this._height)},_setStyles:function(a){this._blur=a.blur==0?0:a.blur||a.defaultBlur;if(a.backgroundColor){this.canvas.style.backgroundColor=a.backgroundColor}this._width=this.canvas.width=this.shadowCanvas.width=a.width||this._width;this._height=this.canvas.height=this.shadowCanvas.height=a.height||this._height;this._opacity=(a.opacity||0)*255;this._maxOpacity=(a.maxOpacity||a.defaultMaxOpacity)*255;this._minOpacity=(a.minOpacity||a.defaultMinOpacity)*255;this._useGradientOpacity=!!a.useGradientOpacity},_drawAlpha:function(a){var c=this._min=a.min;var d=this._max=a.max;var a=a.data||[];var e=a.length;var f=1-this._blur;while(e--){var g=a[e];var h=g.x;var i=g.y;var j=g.radius;var k=Math.min(g.value,d);var l=h-j;var m=i-j;var n=this.shadowCtx;var o;if(!this._templates[j]){this._templates[j]=o=b(j,f)}else{o=this._templates[j]}var p=(k-c)/(d-c);n.globalAlpha=p<.01?.01:p;n.drawImage(o,l,m);if(l<this._renderBoundaries[0]){this._renderBoundaries[0]=l}if(m<this._renderBoundaries[1]){this._renderBoundaries[1]=m}if(l+2*j>this._renderBoundaries[2]){this._renderBoundaries[2]=l+2*j}if(m+2*j>this._renderBoundaries[3]){this._renderBoundaries[3]=m+2*j}}},_colorize:function(){var a=this._renderBoundaries[0];var b=this._renderBoundaries[1];var c=this._renderBoundaries[2]-a;var d=this._renderBoundaries[3]-b;var e=this._width;var f=this._height;var g=this._opacity;var h=this._maxOpacity;var i=this._minOpacity;var j=this._useGradientOpacity;if(a<0){a=0}if(b<0){b=0}if(a+c>e){c=e-a}if(b+d>f){d=f-b}var k=this.shadowCtx.getImageData(a,b,c,d);var l=k.data;var m=l.length;var n=this._palette;for(var o=3;o<m;o+=4){var p=l[o];var q=p*4;if(!q){continue}var r;if(g>0){r=g}else{if(p<h){if(p<i){r=i}else{r=p}}else{r=h}}l[o-3]=n[q];l[o-2]=n[q+1];l[o-1]=n[q+2];l[o]=j?n[q+3]:r}k.data=l;this.ctx.putImageData(k,a,b);this._renderBoundaries=[1e3,1e3,0,0]},getValueAt:function(a){var b;var c=this.shadowCtx;var d=c.getImageData(a.x,a.y,1,1);var e=d.data[3];var f=this._max;var g=this._min;b=Math.abs(f-g)*(e/255)>>0;return b},getDataURL:function(){return this.canvas.toDataURL()}};return d}();var d=function j(){var b=false;if(a["defaultRenderer"]==="canvas2d"){b=c}return b}();var e={merge:function(){var a={};var b=arguments.length;for(var c=0;c<b;c++){var d=arguments[c];for(var e in d){a[e]=d[e]}}return a}};var f=function k(){var c=function h(){function a(){this.cStore={}}a.prototype={on:function(a,b,c){var d=this.cStore;if(!d[a]){d[a]=[]}d[a].push(function(a){return b.call(c,a)})},emit:function(a,b){var c=this.cStore;if(c[a]){var d=c[a].length;for(var e=0;e<d;e++){var f=c[a][e];f(b)}}}};return a}();var f=function(a){var b=a._renderer;var c=a._coordinator;var d=a._store;c.on("renderpartial",b.renderPartial,b);c.on("renderall",b.renderAll,b);c.on("extremachange",function(b){a._config.onExtremaChange&&a._config.onExtremaChange({min:b.min,max:b.max,gradient:a._config["gradient"]||a._config["defaultGradient"]})});d.setCoordinator(c)};function g(){var g=this._config=e.merge(a,arguments[0]||{});this._coordinator=new c;if(g["plugin"]){var h=g["plugin"];if(!a.plugins[h]){throw new Error("Plugin '"+h+"' not found. Maybe it was not registered.")}else{var i=a.plugins[h];this._renderer=new i.renderer(g);this._store=new i.store(g)}}else{this._renderer=new d(g);this._store=new b(g)}f(this)}g.prototype={addData:function(){this._store.addData.apply(this._store,arguments);return this},removeData:function(){this._store.removeData&&this._store.removeData.apply(this._store,arguments);return this},setData:function(){this._store.setData.apply(this._store,arguments);return this},setDataMax:function(){this._store.setDataMax.apply(this._store,arguments);return this},setDataMin:function(){this._store.setDataMin.apply(this._store,arguments);return this},configure:function(a){this._config=e.merge(this._config,a);this._renderer.updateConfig(this._config);this._coordinator.emit("renderall",this._store._getInternalData());return this},repaint:function(){this._coordinator.emit("renderall",this._store._getInternalData());return this},getData:function(){return this._store.getData()},getDataURL:function(){return this._renderer.getDataURL()},getValueAt:function(a){if(this._store.getValueAt){return this._store.getValueAt(a)}else if(this._renderer.getValueAt){return this._renderer.getValueAt(a)}else{return null}}};return g}();var g={create:function(a){return new f(a)},register:function(b,c){a.plugins[b]=c}};return g});
  ;(function (name, context, factory) {
  // Supports UMD. AMD, CommonJS/Node.js and browser context
  if (typeof module !== "undefined" && module.exports) {
    module.exports = factory(
      require('heatmap.js'),
      require('google-maps')
    );
  } else if (typeof define === "function" && define.amd) {
    define(['heatmap.js', 'google-maps'], factory);
  } else {
    // browser globals
    if (typeof window.h337 === 'undefined') {
      throw new Error('heatmap.js must be loaded before the gmaps heatmap plugin');
    }
    if (typeof window.google === 'undefined') {
      throw new Error('Google Maps must be loaded before the gmaps heatmap plugin');
    }
    context[name] = factory(window.h337, window.google.maps);
  }
})("HeatmapOverlay", this, function(h337, gmaps) {
  'use strict';
  var HeatmapOverlay = function(map, cfg){ 
    this.setMap(map);
    this.initialize(cfg || {});
  };
  HeatmapOverlay.prototype = new gmaps.OverlayView();
  HeatmapOverlay.CSS_TRANSFORM = (function() {
    var div = document.createElement('div');
    var props = [
      'transform',
      'WebkitTransform',
      'MozTransform',
      'OTransform',
      'msTransform'
    ];
    for (var i = 0; i < props.length; i++) {
      var prop = props[i];
      if (div.style[prop] !== undefined) {
        return prop;
      }
    }
    return props[0];
  })();
  HeatmapOverlay.prototype.initialize = function(cfg) {
    this.cfg = cfg;
    
    var map = this.map = this.getMap();
    var container = this.container = document.createElement('div');
    var mapDiv = map.getDiv();
    var width = this.width = mapDiv.clientWidth;
    var height = this.height = mapDiv.clientHeight;
    container.style.cssText = 'width:' + width +'px;height:' + height+'px;';
    this.data = [];
    this.max = 1;
    this.min = 0;
    cfg.container = container;
  };
  HeatmapOverlay.prototype.onAdd = function(){
    var that = this;
    this.getPanes().overlayLayer.appendChild(this.container);
    this.changeHandler = gmaps.event.addListener(
      this.map,
      'bounds_changed',
      function() { return that.draw(); }
    );
   
    if (!this.heatmap) {
      this.heatmap = h337.create(this.cfg);
    }
    this.draw();
  };
  HeatmapOverlay.prototype.onRemove = function() { 
    if (!this.map) { return; }
    this.map = null;
    this.container.parentElement.removeChild(this.container);
    if (this.changeHandler) {
      gmaps.event.removeListener(this.changeHandler);
      this.changeHandler = null;
    }
  };
  HeatmapOverlay.prototype.draw = function() {
    if (!this.map) { return; }
    var bounds = this.map.getBounds();
    var topLeft = new gmaps.LatLng(
      bounds.getNorthEast().lat(),
      bounds.getSouthWest().lng()
    );
    var projection = this.getProjection();
    var point = projection.fromLatLngToDivPixel(topLeft);
    this.container.style[HeatmapOverlay.CSS_TRANSFORM] = 'translate(' +
        Math.round(point.x) + 'px,' +
        Math.round(point.y) + 'px)';
    this.update();
  };
  HeatmapOverlay.prototype.resize = function() {
    if (!this.map){ return; }
    var div = this.map.getDiv(),
      width = div.clientWidth,
      height = div.clientHeight;
    if (width == this.width && height == this.height){ return; }
    this.width = width;
    this.height = height;
    // update heatmap dimensions
    this.heatmap._renderer.setDimensions(width, height);
    // then redraw all datapoints with update
    this.update();
  };
  HeatmapOverlay.prototype.update = function() {
    var projection = this.getProjection(),
      zoom, scale, bounds, topLeft;
    var generatedData = { max: this.max, min: this.min, data: [] };
    if (!projection){ return; }
    bounds = this.map.getBounds();
    topLeft = new gmaps.LatLng(
      bounds.getNorthEast().lat(),
      bounds.getSouthWest().lng()
    );
    zoom = this.map.getZoom();
    scale = Math.pow(2, zoom);
    this.resize();
    if (this.data.length == 0) {
      if (this.heatmap) {
        this.heatmap.setData(generatedData);
      }
      return;
    }
    var latLngPoints = [];
    // iterate through data 
    var len = this.data.length;
    var layerProjection = this.getProjection();
    var layerOffset = layerProjection.fromLatLngToDivPixel(topLeft);
    var radiusMultiplier = this.cfg.scaleRadius ? scale : 1;
    var localMax = 0;
    var localMin = 0;
    var valueField = this.cfg.valueField;
    while (len--) {
      var entry = this.data[len];
      var value = entry[valueField];
      var latlng = entry.latlng;
      // we don't wanna render points that are not even on the map ;-)
      if (!bounds.contains(latlng)) {
        continue;
      }
      // local max is the maximum within current bounds
      localMax = Math.max(value, localMax);
      localMin = Math.min(value, localMin);
      var point = layerProjection.fromLatLngToDivPixel(latlng);
      var latlngPoint = { x: Math.round(point.x - layerOffset.x), y: Math.round(point.y - layerOffset.y) };
      latlngPoint[valueField] = value;
      var radius;
      if (entry.radius) {
        radius = entry.radius * radiusMultiplier;
      } else {
        radius = (this.cfg.radius || 2) * radiusMultiplier;
      }
      latlngPoint.radius = radius;
      latLngPoints.push(latlngPoint);
    }
    if (this.cfg.useLocalExtrema) {
      generatedData.max = localMax;
      generatedData.min = localMin;
    }
    generatedData.data = latLngPoints;
    this.heatmap.setData(generatedData);
  };
  HeatmapOverlay.prototype.setData = function(data) { 
    this.max = data.max;
    this.min = data.min;
    var latField = this.cfg.latField || 'lat';
    var lngField = this.cfg.lngField || 'lng';
    var valueField = this.cfg.valueField || 'value';
    // transform data to latlngs
    var data = data.data;
    var len = data.length;
    var d = [];
    while (len--) {
      var entry = data[len];
      var latlng = new gmaps.LatLng(entry[latField], entry[lngField]);
      var dataObj = { latlng: latlng };
      dataObj[valueField] = entry[valueField];
      if (entry.radius) {
        dataObj.radius = entry.radius;
      }
      d.push(dataObj);
    }
    this.data = d;
    this.update();
  };
  // experimential. not ready yet.
  HeatmapOverlay.prototype.addData = function(pointOrArray) {
    if (pointOrArray.length > 0) {
        var len = pointOrArray.length;
        while(len--) {
          this.addData(pointOrArray[len]);
        }
      } else {
        var latField = this.cfg.latField || 'lat';
        var lngField = this.cfg.lngField || 'lng';
        var valueField = this.cfg.valueField || 'value';
        var entry = pointOrArray;
        var latlng = new gmaps.LatLng(entry[latField], entry[lngField]);
        var dataObj = { latlng: latlng };
        
        dataObj[valueField] = entry[valueField];
        if (entry.radius) {
          dataObj.radius = entry.radius;
        }
        this.max = Math.max(this.max, dataObj[valueField]);
        this.min = Math.min(this.min, dataObj[valueField]);
        this.data.push(dataObj);
        this.update();
      }
  };
  return HeatmapOverlay;
});
</script>
<script>
  feather.replace()
var maps_options = {
  "async": true,
  "crossDomain": true,
  "url": "https://api-wufthacks.xlabs.one:8243/td/transaction/V1.0.0/transaction/account-number/70974298768331?page=1&size=10",
  "method": "GET",
  "headers": {
    "accept": "application/json",
    "x-api-key": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkcnV2ZXNoZWVyYW4iLCJleHAiOjE1MTg1NjEyNTR9.kTlsWaJafTDX3KThRyI11xj_LoWsBLavOZXLuajzvQ5VSCiaXZZSTZMpnzsiChxiMnxhPj4l5yy1gSaClxklzA",
    "authorization": "Bearer 00670285-a115-38d5-8b22-f21557b7e17d",
  }
}
$(document).ready(function() {
  initMap();
})
var map;
var heatmap;
function initMap() {
    var sanFrancisco = new google.maps.LatLng(40.446948, -97.355473);
    map = new google.maps.Map(document.getElementById('map'), {
        zoom: 4,
        center: sanFrancisco,
        //mapTypeId: 'terrain'
    });
    heatmap = new HeatmapOverlay(map, 
      {
        // radius should be small ONLY if scaleRadius is true (or small radius is intended)
        "radius": 35,
        "maxOpacity": 1, 
        // scales the radius based on map zoom
        "scaleRadius": false, 
        // if set to false the heatmap uses the global maximum for colorization
        // if activated: uses the data maximum within the current map boundaries 
        //   (there will always be a red spot with useLocalExtremas true)
        "useLocalExtrema": true,
        // which field name in your data represents the latitude - default "lat"
        latField: 'lat',
        // which field name in your data represents the longitude - default "lng"
        lngField: 'lng',
        // which field name in your data represents the data value - default "value"
        valueField: 'weight'
      }
    );
    // $.ajax(maps_options).done(function (response) {
    //   console.log(response['content']);
      
    // });
    setOverlay(jsonToData());
    console.log(jsonToData());
        
}
function updateMap(field) {
    var dataUrl = "/api/?fields=" + field + "&groupBy=location"
    $.getJSON(dataUrl, function(json) {
        setOverlay(jsonToData(json));
    });
}
function setOverlay(data) {
    heatmap.setData({
        min: 0, 
        max: 147,
        data: data
    });
}
function jsonToData() {
    var heatmapData = [];
    console.log(heatmapData);
    var data = "<%= trans %>";
    var r = data.replace(/&#34;/g, "\"");
    var parsed = JSON.parse(r);
    for (var i = 0; i < parsed.length; i++) {
        //var latLng = new google.maps.LatLng(lat, long);
        var v = {
            lat: parsed[i]['latitude'],
            lng: parsed[i]['longitude'],
            weight: parsed[i]['amount']
        }
        heatmapData.push(v);
    }
    
    console.log(heatmapData);
    return heatmapData;
}
</script>
</body>
</html>